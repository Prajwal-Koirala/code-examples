name: "Build Terraform Configs"
on:
  check_run:
    types: [completed]
  push:
    paths:
      - "**.tf"
  pull_request:
    paths:
      - "**.tf"
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the directory
        uses: actions/checkout@v3
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v0
      - name: Configure the credentials for AWS
        run: aws configure set aws_access_key_id "${{ secrets.AWS_ACESS_KEY }}" && aws configure set aws_secret_access_key "${{ secrets.AWS_SECRET_ACESS_KEY }}"
      - id: Setup auth for Google Cloud SDK
        uses: google-github-actions/auth@v0
        with:
          credentials_json: "${{ secrets.GCP_CREDENTIALS }}"
      - name: Configure the credentials for Cloudflare
        run: |
          export CLOUDFLARE_EMAIL="${{ secrets.CF_EMAIL_ADDRESS }}"
          export CLOUDFLARE_API_KEY="${{ secrets.CF_API_KEY }}"
          export CLOUDFLARE_ZONE_ID="${{ secrets.CF_ZONE_ID }}"
      - name: Run the terraform code
        continue-on-error: true
        run: |
          FIND_ALL_DIRECTORY=$(find Terraform/ -mindepth 0 -maxdepth 1 -type d)
          for CURRENT_FIND_ALL_DIRECTORY in ${FIND_ALL_DIRECTORY}; do
            ALL_DIRECTORY_LIST[${ADD_CONTENT}]=${CURRENT_FIND_ALL_DIRECTORY}
            ADD_CONTENT=$(("${ADD_CONTENT}" + 1))
          done
          for EACH_DIRECTORY in "${ALL_DIRECTORY_LIST[@]}"; do
            echo ${EACH_DIRECTORY}
            terraform -chdir=${EACH_DIRECTORY} init
            terraform -chdir=${EACH_DIRECTORY} validate
            terraform -chdir=${EACH_DIRECTORY} graph
            terraform -chdir=${EACH_DIRECTORY} plan
            terraform -chdir=${EACH_DIRECTORY} apply -auto-approve
            terraform -chdir=${EACH_DIRECTORY} state pull
            terraform -chdir=${EACH_DIRECTORY} state list
            terraform -chdir=${EACH_DIRECTORY} show
            terraform -chdir=${EACH_DIRECTORY} destroy -auto-approve
          done
      - name: Validate that the delete command ran.
        continue-on-error: true
        run: |
          FIND_ALL_DIRECTORY=$(find Terraform/ -mindepth 0 -maxdepth 1 -type d)
          for CURRENT_FIND_ALL_DIRECTORY in ${FIND_ALL_DIRECTORY}; do
            ALL_DIRECTORY_LIST[${ADD_CONTENT}]=${CURRENT_FIND_ALL_DIRECTORY}
            ADD_CONTENT=$(("${ADD_CONTENT}" + 1))
          done
          for EACH_DIRECTORY in "${ALL_DIRECTORY_LIST[@]}"; do
            echo ${EACH_DIRECTORY}
            terraform -chdir=${EACH_DIRECTORY} destroy -auto-approve
          done
